// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kreaTid.Data;

namespace kreaTid.Migrations
{
    [DbContext(typeof(kreaTidContext))]
    partial class kreaTidContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kreaTid.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogPostContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BlogPostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogPostTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostId");

                    b.ToTable("BlogPost");

                    b.HasData(
                        new
                        {
                            BlogPostId = 1,
                            BlogPostContent = "what th",
                            BlogPostDate = new DateTime(2020, 5, 19, 9, 5, 1, 990, DateTimeKind.Local).AddTicks(7419),
                            BlogPostTitle = "maling er godt"
                        });
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostComment", b =>
                {
                    b.Property<int>("BlogPostCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BlogPostCommentLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BlogPostCommentPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogPostCommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogPostCommentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.HasKey("BlogPostCommentId");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogPostComment");

                    b.HasData(
                        new
                        {
                            BlogPostCommentId = 1,
                            BlogPostCommentLastUpdated = new DateTime(2020, 5, 19, 9, 5, 1, 991, DateTimeKind.Local).AddTicks(5195),
                            BlogPostCommentPublishDate = new DateTime(2020, 5, 19, 9, 5, 1, 991, DateTimeKind.Local).AddTicks(3400),
                            BlogPostCommentText = "what",
                            BlogPostCommentUser = "who",
                            BlogPostId = 1
                        });
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostImg", b =>
                {
                    b.Property<int>("BlogPostImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<string>("ImgAltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostImgId");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogPostImg");

                    b.HasData(
                        new
                        {
                            BlogPostImgId = 1,
                            BlogPostId = 1,
                            ImgAltText = "ddd",
                            ImgFileUrl = "~/img/header.jpg",
                            ImgType = "blogbillede"
                        });
                });

            modelBuilder.Entity("kreaTid.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Papir"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "xx"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "xx"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "xx"
                        });
                });

            modelBuilder.Entity("kreaTid.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductDescription = "bla bla bla",
                            ProductName = "Maling",
                            ProductPrice = 23.00m
                        });
                });

            modelBuilder.Entity("kreaTid.Models.ProductComment", b =>
                {
                    b.Property<int>("ProductCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ProductCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductCommentLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductCommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCommentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCommentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComment");

                    b.HasData(
                        new
                        {
                            ProductCommentId = 1,
                            ProductCommentDate = new DateTime(2020, 5, 19, 9, 5, 1, 978, DateTimeKind.Local).AddTicks(8806),
                            ProductCommentLastUpdated = new DateTime(2020, 5, 19, 9, 5, 1, 989, DateTimeKind.Local).AddTicks(2971),
                            ProductCommentText = "xxx",
                            ProductCommentUser = "xx",
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("kreaTid.Models.ProductImg", b =>
                {
                    b.Property<int>("ProductImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImgAltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImgFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImgType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImgId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImg");

                    b.HasData(
                        new
                        {
                            ProductImgId = 1,
                            BlogPostId = 0,
                            ProductId = 1,
                            ProductImgAltText = "test",
                            ProductImgFileUrl = "~/img/Logo.png",
                            ProductImgType = "productImg"
                        });
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostComment", b =>
                {
                    b.HasOne("kreaTid.Models.BlogPost", null)
                        .WithMany("BlogPostComments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostImg", b =>
                {
                    b.HasOne("kreaTid.Models.BlogPost", null)
                        .WithMany("BlogPostImgs")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.Product", b =>
                {
                    b.HasOne("kreaTid.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.ProductComment", b =>
                {
                    b.HasOne("kreaTid.Models.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.ProductImg", b =>
                {
                    b.HasOne("kreaTid.Models.Product", null)
                        .WithMany("ProductImgs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
