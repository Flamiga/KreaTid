// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kreaTid.Data;

namespace kreaTid.Migrations
{
    [DbContext(typeof(kreaTidContext))]
    [Migration("20200514094328_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kreaTid.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogPostContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BlogPostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogPostTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostId");

                    b.ToTable("BlogPost");
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostComment", b =>
                {
                    b.Property<int>("BlogPostCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BlogPostCommentLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BlogPostCommentPublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogPostCommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogPostCommentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.HasKey("BlogPostCommentId");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogPostComment");
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostImg", b =>
                {
                    b.Property<int>("BlogPostImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<string>("ImgAltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostImgId");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogPostImg");
                });

            modelBuilder.Entity("kreaTid.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("kreaTid.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("kreaTid.Models.ProductComment", b =>
                {
                    b.Property<int>("ProductCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ProductCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductCommentLastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductCommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCommentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCommentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComment");
                });

            modelBuilder.Entity("kreaTid.Models.ProductImg", b =>
                {
                    b.Property<int>("ProductImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImgAltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImgFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImgType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImgId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImg");
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostComment", b =>
                {
                    b.HasOne("kreaTid.Models.BlogPost", null)
                        .WithMany("BlogPostComments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.BlogPostImg", b =>
                {
                    b.HasOne("kreaTid.Models.BlogPost", null)
                        .WithMany("BlogPostImgs")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.Product", b =>
                {
                    b.HasOne("kreaTid.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.ProductComment", b =>
                {
                    b.HasOne("kreaTid.Models.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kreaTid.Models.ProductImg", b =>
                {
                    b.HasOne("kreaTid.Models.Product", null)
                        .WithMany("ProductImgs")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
